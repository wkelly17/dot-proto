---
export interface Props {
  title: string;
}

const {title} = Astro.props;
import "../global.css";
---

<!DOCTYPE html>
<html lang="en" class="bg-base">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <!-- <link href="https://vjs.zencdn.net/8.0.4/video-js.css" rel="stylesheet" /> -->
    <script src="/src/pwa.ts"></script>

    <!-- {pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />} -->
  </head>
  <body class="font-sans leading-relaxed bg-base text-surface">
    <slot />
  </body>
</html>

<script>
const darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
const htmlElement = document.querySelector('html') as HTMLHtmlElement;

function handleColorSchemeChange(e:MediaQueryListEvent) {
  if (e.matches) {
    htmlElement.classList.add('dark');
  } else {
    htmlElement.classList.remove('dark');
  }
}

// Add the initial class based on the current color scheme
if (darkModeMediaQuery.matches) {
  htmlElement.classList.add('dark');
}

// Add a listener to detect changes to the color scheme
darkModeMediaQuery.addEventListener("change", handleColorSchemeChange);
</script>