---
import Layout from "../layouts/Layout.astro";
// import videojs from "video.js";

// import key from "../../brightcove-auth-keys/private.pem";

// import {Thumbnail} from "../components/Thumbnail";
// import {VideoJs} from "../components/Video";
// import {DownloadToggle} from "../components/DownloadToggle";
// import {Sidebar} from "../components/Sidebar";
import {formatDuration, getMp4DownloadSize, groupObjectsByKey} from "../utils";

const playbackBaseUrl = "https://edge.api.brightcove.com/playback/v1";
const accountId = "6314154063001";
const playListId = "1745043212224883810";
const policyKey =
  "BCpkADawqM0bQiUyoSejARSlmKAaReqHw7sRy-4OFGmD8lb2ibVNF-d7H4wtYWIS8NMHOP-3IrfH1mVnUzhxQThtzvPBe-IUyk9EagJcJwWrbIBBCg1tsi8vJFv7_S6GGiTNhDwXFJfwF_W-";

let myHeaders = new Headers();
myHeaders.append("Accept", `application/json;pk=${policyKey}`);

let requestOptions = {
  method: "GET",
  headers: myHeaders,
};
const url = `${playbackBaseUrl}/accounts/${accountId}/playlists/ref:benin-new-testament?limit=300`;

// const response = await fetch(url, {
//   headers,
// });
const response = await fetch(url, requestOptions);
const data = await response.json();
const playableSources = data.videos
  .map((vid: any) => {
    return vid.sources.filter((src: any) => {
      return src.container && src.container == "MP4";
    });
  })
  .flat();

const sortedVids = data.videos.sort((a, b) => {
  // Given this pattern: ASE-X-BENINSL_63-1JN_1Jean_01.mp4
  // match 0 is entire string
  // match 1 is the sort order, 63 ((?:\d)
  // match 2 is the book (1Jean)
  // match 3 is the chapter.
  // optional extension on the end.
  const pattern =
    /^.*?(\d{2})-(?:\d)?[A-Z]{2,3}_(\d?.+?)_([0-9]{2,3})(?:\..+)?$/;

  if (!a || !b) return;
  // /^.*?(\d{2})-(?:0|1)?[A-Z]{2,3}_\d?(.+?)_([0-9]{2,3})(?:\..+)?$/;
  const ref1 = a.reference_id?.toUpperCase();
  const ref2 = b.reference_id?.toUpperCase();
  const match = ref1.match(pattern);
  const match2 = ref2.match(pattern);
  if (!match || !match2) {
    // console.log("NO MATCHES");
    // console.log({ref1, ref2});
    return -1;
  }
  const sortA = Number(match[1]);
  const bookA = match[2];
  const chapterNumberA = Number(match[3]);
  const sortB = Number(match2[1]);
  const bookB = match2[2];
  const chapterNumberB = Number(match2[3]);
  a.book = a.book || bookA;
  b.book = b.book || bookB;

  let retVal;
  if (sortA == sortB) {
    retVal =
      chapterNumberA < chapterNumberB
        ? -1
        : chapterNumberA == chapterNumberB
        ? 0
        : 1;
  } else {
    retVal = sortA < sortB ? -1 : sortA == sortB ? 0 : 1;
  }

  // console.log({
  //   ref1,
  //   ref2,
  //   sortA,
  //   sortB,
  //   chapterNumberA,
  //   chapterNumberB,
  //   retVal,
  // });
  return retVal;
});

sortedVids.forEach((vid, idx) => (vid.originalIdx = idx));
const bucketized = groupObjectsByKey(sortedVids, "book");
// console.log(bucketized.length);
// sortedVids.forEach((vid) => console.log(vid.reference_id));

// console.log({data});

// const claims = {
//   accid: accountId,
//   // iat: Date.now(),
// };
// const pk = fs.readFileSync("./brightcove-auth-keys/private.pem");
// const token = jwt.sign(claims, pk, {algorithm: "RS256"});
// console.log({token});
---

<Layout title="Welcome to Astro.">
  <!-- <form action="/api/download" action="POST">
    <button>Dowload</button>
  </form>
  <form action="/api/download-node" action="POST">
    <button>Dowload node</button>
  </form>
  <form action="http://127.0.0.1:8788/api/download" method="POST">
    <button>Dowload cf function</button>
  </form>
  <form action="http://127.0.0.1:8788/api/download-2" method="POST">
    <button>Dowload cf function 2</button>
  </form> -->

  <div class="flex relative flex-col md:flex-row items-start p-4 gap-4">
    go to /benin-new/testament
    <!-- <div class="w-full md:w-3/4  top-0 sticky aspect-video">
      <VideoJs client:load accountId={accountId} videos={sortedVids} />
    </div>
    <div class="relative w-1/4 max-h-[95vh] overflow-y-auto">
      <div class="sticky top-0 bg-white z-20">
        <DownloadToggle client:load />
      </div>
      <Sidebar videos={sortedVids} vidsByBook={bucketized} client:idle />
    </div> -->
  </div>
  <!-- <div style="position: relative; display: block; max-width: 700px;">
    <div style="padding-top: 100%;">
      <iframe
        src="https://players.brightcove.net/6314154063001/9mlrvmAybr_default/index.html?playlistId=1745043212224883810"
        allowfullscreen=""
        allow="encrypted-media"
        style="position: absolute; top: 0px; right: 0px; bottom: 0px; left: 0px; width: 100%; height: 100%;"
      ></iframe>
    </div>
  </div> -->

  <script>
    // const aTag = document.querySelector("#specialA") as HTMLAnchorElement;
    // const encoded = encodeURIComponent(JSON.stringify([st1, st2, s3, s4, s5]));
    // console.log({encoded});
    // aTag.href = `test.zip?src=${encoded}`;
    // const willBasePlayer =
    //   "https://players.brightcove.net/6314154063001/9mlrvmAybr_default/index.html?videoId=";
    // setTimeout(() => {
    //   let iframe: HTMLIFrameElement | null = document.querySelector("#bci");
    //   if (!iframe) return;
    //   iframe.src = `${willBasePlayer}6312743926112`;
    // }, 5000);
  </script>

  <!-- <iframe src="https://players.brightcove.net/6314154063001/default_default/index.html?videoId=6312743926112" allowfullscreen="" allow="encrypted-media" width="960" height="540"></iframe> -->
</Layout>
